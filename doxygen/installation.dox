/**
@page installation Installation Instructions
@tableofcontents

\section installing_robottestingframework Installing Robot Testing Framework

If you have not installed Robot Testing Framework, Please see http://robotology.github.io/robot-testing-framework/index.html.\n
Note that `icub-tests` use the Robot Testing Framework addons of YARP, so please check that YARP is compiled with the `YARP_COMPILE_RobotTestingFramework_ADDONS` CMake option set to ON. You should also make sure that the `yarpmanager` robottestingframework-plugin generated by YARP can be found by the `robottestingframework-testrunner`.\n


\section building_tests Building tests

\subsection building_tests_unix Linux/macOS
On Linux/macOS machines, open a terminal and type:
~~~
    $ git clone https://github.com/robotology/icub-tests.git
    $ cd icub-tests
    $ mkdir build
    $ cd build
    $ cmake ..
    $ make
~~~

\subsection building_tests_win Windows
On Windows machines use the CMake program to create Visual Studio project and build it.

Note: in case CMake fails to detect the Robot Testing Framework package check that you installed Robot Testing Framework or that you set the RobotTestingFramework_DIR environment variables to point to the build directory. Also check that Robot Testing Framework was compiled with YARP support enables (set `ENABLE_MIDDLEWARE_PLUGINS` and verify that `ENABLE_YARP` is ON).

\section configuration Configuration

\subsection plugins Plugins
* Test cases are built as Robot Testing Framework plug-ins (shared libraries) and can be found in `icub-tests/build/plugins` folder.\n
We need to add the plug-ins path to the OS-specific dynamic linker environment variable

\li \b Linux `LD_LIBRARY_PATH`
\li \b macOS `DYLD_LIBRARY_PATH`
\li \b Windows `PATH`

As an example, under Linux:
~~~
    $ echo 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:<path to icub_tests>/build/plugins' >> ~/.bashrc
~~~

\subsection context Context

* Tests configuration (.ini files) can be found in `icub-tests/suite/contexts`.\n
We need to configure the OS-independent `YARP_DATA_DIRS` environment variable so that the test cases can load the configuration files.

~~~
    $ echo 'export YARP_DATA_DIRS=$YARP_DATA_DIRS:<path to icub-tests>/suites' >> ~/.bashrc
~~~

**/
